name: Pull Request Test

on: 
  pull_request:
    branches: 
      - main

jobs:
  build_linux:
    name: Build for linux
    if: "!contains(github.event.head_commit.message, '[skip linux]')"
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        arch: [DEIGEN_DONT_VECTORIZE, msse2, mssse3, mavx, mavx2]
        eigenversion: [3.3.4, 3.3.5, 3.3.6, 3.3.7, 3.3.8, 3.3.9, 3.4.0]
        os: [ubuntu-22.04]
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        git clone https://gitlab.com/libeigen/eigen
        pushd eigen
        git checkout tags/${{ matrix.eigenversion }}
        popd
        mv eigen include
    - name: Build
      continue-on-error: true
      run: |
        export EIGEN_PATH=`pwd`/include
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DEIGENRAND_CXX_FLAGS="-${{ matrix.arch }} -I${EIGEN_PATH}" ../
        make
    - name: Test
      run: |
        ./build/test/EigenRand-test
    - name: Run Accuracy
      run: |
        ./build/EigenRand-accuracy

  build_linux_avx512:
    name: Build for linux AVX512
    if: "!contains(github.event.head_commit.message, '[skip avx]')"
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        arch: [mavx512dq]
        eigenversion: [3.4.0]
        os: [ubuntu-22.04]
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        git clone https://gitlab.com/libeigen/eigen
        pushd eigen
        git checkout tags/${{ matrix.eigenversion }}
        popd
        mv eigen include
    - name: Build
      run: |
        export EIGEN_PATH=`pwd`/include
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DEIGENRAND_CXX_FLAGS="-${{ matrix.arch }} -mavx512f -mfma -I${EIGEN_PATH}" ../
        make
    - name: Test
      run: |
        ./build/test/EigenRand-test
    - name: Run Accuracy
      run: |
        ./build/EigenRand-accuracy

  build_macos:
    name: Build for macOS
    if: "!contains(github.event.head_commit.message, '[skip macos]')"
    runs-on: macOS-10.15
    strategy:
      max-parallel: 4
      matrix:
        arch: [DEIGEN_DONT_VECTORIZE, msse2, mssse3, mavx]
        eigenversion: [3.3.4, 3.3.5, 3.3.6, 3.3.7, 3.3.8, 3.3.9, 3.4.0]
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        wget https://gitlab.com/libeigen/eigen/-/archive/${{ matrix.eigenversion }}/eigen-${{ matrix.eigenversion }}.tar.gz
        tar -zxvf eigen-${{ matrix.eigenversion }}.tar.gz
        mv eigen-${{ matrix.eigenversion }} include
    - name: Build
      continue-on-error: true
      run: |
        export EIGEN_PATH=`pwd`/include
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DEIGENRAND_CXX_FLAGS="-${{ matrix.arch }} -I${EIGEN_PATH}" ../
        make
    - name: Test
      run: |
        ./build/test/EigenRand-test
    - name: Run Accuracy
      run: |
        ./build/EigenRand-accuracy

  build_windows:
    name: Build for Windows
    if: "!contains(github.event.head_commit.message, '[skip windows]')"
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        arch: ['/D EIGEN_DONT_VECTORIZE', '/arch:SSE2', '/arch:AVX', '/arch:AVX2']
        eigenversion: [3.3.4, 3.3.5, 3.3.6, 3.3.7, 3.3.8, 3.3.9, 3.4.0]
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        Invoke-WebRequest -OutFile eigen.tar.gz https://gitlab.com/libeigen/eigen/-/archive/${{ matrix.eigenversion }}/eigen-${{ matrix.eigenversion }}.tar.gz
        tar -zxvf eigen.tar.gz
        mv eigen-${{ matrix.eigenversion }} include
        echo "EIGEN_PATH=$(Get-Location)\include" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
    - name: Build
      continue-on-error: true
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeBuildType: Release
        buildWithCMake: true
        cmakeAppendedArgs: -G"Visual Studio 16 2019" -Ax64 -DEIGENRAND_CXX_FLAGS="${{ matrix.arch }} /I${{ env.EIGEN_PATH }}"
        buildWithCMakeArgs: --config Release
        buildDirectory: build
    - name: Test
      run: |
        .\build\test\Release\EigenRand-test.exe
    - name: Run Accuracy
      run: |
        .\build\Release\EigenRand-accuracy.exe

  build_windows_avx512:
    name: Build for Windows
    if: "!contains(github.event.head_commit.message, '[skip windows-avx]')"
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        arch: ['/arch:AVX512']
        eigenversion: [3.4.0]
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        Invoke-WebRequest -OutFile eigen.tar.gz https://gitlab.com/libeigen/eigen/-/archive/${{ matrix.eigenversion }}/eigen-${{ matrix.eigenversion }}.tar.gz
        tar -zxvf eigen.tar.gz
        mv eigen-${{ matrix.eigenversion }} include
        echo "EIGEN_PATH=$(Get-Location)\include" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
    - name: Build
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeBuildType: Release
        buildWithCMake: true
        cmakeAppendedArgs: -G"Visual Studio 16 2019" -Ax64 -DEIGENRAND_CXX_FLAGS="${{ matrix.arch }} /I${{ env.EIGEN_PATH }}"
        buildWithCMakeArgs: --config Release
        buildDirectory: build
    - name: Test
      run: |
        .\build\test\Release\EigenRand-test.exe
    - name: Run Accuracy
      run: |
        .\build\Release\EigenRand-accuracy.exe

  reference:
    name: Reference
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-22.04, macOS-10.15, windows-2019]
    steps:        
    - uses: actions/checkout@v3
    - name: Set up Python3
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
        architecture: x64
    - name: Test Reference
      run: |
        pip install scipy
        python benchmark/comp_scipy.py
